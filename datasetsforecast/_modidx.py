# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/datasetsforecast/',
                'doc_host': 'https://Nixtla.github.io',
                'git_url': 'https://github.com/Nixtla/datasetsforecast/tree/main/',
                'lib_path': 'datasetsforecast'},
  'syms': { 'datasetsforecast.favorita': { 'datasetsforecast.favorita.CodeTimer': ( 'favorita.html#codetimer',
                                                                                    'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.CodeTimer.__enter__': ( 'favorita.html#codetimer.__enter__',
                                                                                              'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.CodeTimer.__exit__': ( 'favorita.html#codetimer.__exit__',
                                                                                             'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.CodeTimer.__init__': ( 'favorita.html#codetimer.__init__',
                                                                                             'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.Favorita200': ( 'favorita.html#favorita200',
                                                                                      'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.Favorita500': ( 'favorita.html#favorita500',
                                                                                      'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.FavoritaComplete': ( 'favorita.html#favoritacomplete',
                                                                                           'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.FavoritaData': ( 'favorita.html#favoritadata',
                                                                                       'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.FavoritaData._get_static_data': ( 'favorita.html#favoritadata._get_static_data',
                                                                                                        'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.FavoritaData._get_temporal_agg': ( 'favorita.html#favoritadata._get_temporal_agg',
                                                                                                         'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.FavoritaData._get_temporal_bottom': ( 'favorita.html#favoritadata._get_temporal_bottom',
                                                                                                            'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.FavoritaData.load': ( 'favorita.html#favoritadata.load',
                                                                                            'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.FavoritaData.load_preprocessed': ( 'favorita.html#favoritadata.load_preprocessed',
                                                                                                         'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.FavoritaRawData': ( 'favorita.html#favoritarawdata',
                                                                                          'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.FavoritaRawData._load_raw_group_data': ( 'favorita.html#favoritarawdata._load_raw_group_data',
                                                                                                               'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.FavoritaRawData._read_raw_data': ( 'favorita.html#favoritarawdata._read_raw_data',
                                                                                                         'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.FavoritaRawData.download': ( 'favorita.html#favoritarawdata.download',
                                                                                                   'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.FavoritaRawData.unzip': ( 'favorita.html#favoritarawdata.unzip',
                                                                                                'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.distance_to_holiday': ( 'favorita.html#distance_to_holiday',
                                                                                              'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.get_levels_from_S_df': ( 'favorita.html#get_levels_from_s_df',
                                                                                               'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.make_holidays_distance_df': ( 'favorita.html#make_holidays_distance_df',
                                                                                                    'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.nested_one_hot_encoding': ( 'favorita.html#nested_one_hot_encoding',
                                                                                                  'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.numpy_balance': ( 'favorita.html#numpy_balance',
                                                                                        'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.numpy_bfill': ( 'favorita.html#numpy_bfill',
                                                                                      'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.numpy_ffill': ( 'favorita.html#numpy_ffill',
                                                                                      'datasetsforecast/favorita.py'),
                                           'datasetsforecast.favorita.one_hot_encoding': ( 'favorita.html#one_hot_encoding',
                                                                                           'datasetsforecast/favorita.py')},
            'datasetsforecast.hierarchical': { 'datasetsforecast.hierarchical.HierarchicalData': ( 'hierarchical.html#hierarchicaldata',
                                                                                                   'datasetsforecast/hierarchical.py'),
                                               'datasetsforecast.hierarchical.HierarchicalData.download': ( 'hierarchical.html#hierarchicaldata.download',
                                                                                                            'datasetsforecast/hierarchical.py'),
                                               'datasetsforecast.hierarchical.HierarchicalData.load': ( 'hierarchical.html#hierarchicaldata.load',
                                                                                                        'datasetsforecast/hierarchical.py'),
                                               'datasetsforecast.hierarchical.Labour': ( 'hierarchical.html#labour',
                                                                                         'datasetsforecast/hierarchical.py'),
                                               'datasetsforecast.hierarchical.OldTourismLarge': ( 'hierarchical.html#oldtourismlarge',
                                                                                                  'datasetsforecast/hierarchical.py'),
                                               'datasetsforecast.hierarchical.OldTraffic': ( 'hierarchical.html#oldtraffic',
                                                                                             'datasetsforecast/hierarchical.py'),
                                               'datasetsforecast.hierarchical.TourismLarge': ( 'hierarchical.html#tourismlarge',
                                                                                               'datasetsforecast/hierarchical.py'),
                                               'datasetsforecast.hierarchical.TourismSmall': ( 'hierarchical.html#tourismsmall',
                                                                                               'datasetsforecast/hierarchical.py'),
                                               'datasetsforecast.hierarchical.Traffic': ( 'hierarchical.html#traffic',
                                                                                          'datasetsforecast/hierarchical.py'),
                                               'datasetsforecast.hierarchical.Wiki2': ( 'hierarchical.html#wiki2',
                                                                                        'datasetsforecast/hierarchical.py')},
            'datasetsforecast.long_horizon': { 'datasetsforecast.long_horizon.ECL': ( 'long_horizon.html#ecl',
                                                                                      'datasetsforecast/long_horizon.py'),
                                               'datasetsforecast.long_horizon.ETTh1': ( 'long_horizon.html#etth1',
                                                                                        'datasetsforecast/long_horizon.py'),
                                               'datasetsforecast.long_horizon.ETTh2': ( 'long_horizon.html#etth2',
                                                                                        'datasetsforecast/long_horizon.py'),
                                               'datasetsforecast.long_horizon.ETTm1': ( 'long_horizon.html#ettm1',
                                                                                        'datasetsforecast/long_horizon.py'),
                                               'datasetsforecast.long_horizon.ETTm2': ( 'long_horizon.html#ettm2',
                                                                                        'datasetsforecast/long_horizon.py'),
                                               'datasetsforecast.long_horizon.Exchange': ( 'long_horizon.html#exchange',
                                                                                           'datasetsforecast/long_horizon.py'),
                                               'datasetsforecast.long_horizon.ILI': ( 'long_horizon.html#ili',
                                                                                      'datasetsforecast/long_horizon.py'),
                                               'datasetsforecast.long_horizon.LongHorizon': ( 'long_horizon.html#longhorizon',
                                                                                              'datasetsforecast/long_horizon.py'),
                                               'datasetsforecast.long_horizon.LongHorizon.download': ( 'long_horizon.html#longhorizon.download',
                                                                                                       'datasetsforecast/long_horizon.py'),
                                               'datasetsforecast.long_horizon.LongHorizon.load': ( 'long_horizon.html#longhorizon.load',
                                                                                                   'datasetsforecast/long_horizon.py'),
                                               'datasetsforecast.long_horizon.TrafficL': ( 'long_horizon.html#trafficl',
                                                                                           'datasetsforecast/long_horizon.py'),
                                               'datasetsforecast.long_horizon.Weather': ( 'long_horizon.html#weather',
                                                                                          'datasetsforecast/long_horizon.py')},
            'datasetsforecast.long_horizon2': { 'datasetsforecast.long_horizon2.ECL': ( 'long_horizon2.html#ecl',
                                                                                        'datasetsforecast/long_horizon2.py'),
                                                'datasetsforecast.long_horizon2.ETTh1': ( 'long_horizon2.html#etth1',
                                                                                          'datasetsforecast/long_horizon2.py'),
                                                'datasetsforecast.long_horizon2.ETTh2': ( 'long_horizon2.html#etth2',
                                                                                          'datasetsforecast/long_horizon2.py'),
                                                'datasetsforecast.long_horizon2.ETTm1': ( 'long_horizon2.html#ettm1',
                                                                                          'datasetsforecast/long_horizon2.py'),
                                                'datasetsforecast.long_horizon2.ETTm2': ( 'long_horizon2.html#ettm2',
                                                                                          'datasetsforecast/long_horizon2.py'),
                                                'datasetsforecast.long_horizon2.LongHorizon2': ( 'long_horizon2.html#longhorizon2',
                                                                                                 'datasetsforecast/long_horizon2.py'),
                                                'datasetsforecast.long_horizon2.LongHorizon2._normalize_data': ( 'long_horizon2.html#longhorizon2._normalize_data',
                                                                                                                 'datasetsforecast/long_horizon2.py'),
                                                'datasetsforecast.long_horizon2.LongHorizon2.download': ( 'long_horizon2.html#longhorizon2.download',
                                                                                                          'datasetsforecast/long_horizon2.py'),
                                                'datasetsforecast.long_horizon2.LongHorizon2.load': ( 'long_horizon2.html#longhorizon2.load',
                                                                                                      'datasetsforecast/long_horizon2.py'),
                                                'datasetsforecast.long_horizon2.TrafficL': ( 'long_horizon2.html#trafficl',
                                                                                             'datasetsforecast/long_horizon2.py'),
                                                'datasetsforecast.long_horizon2.Weather': ( 'long_horizon2.html#weather',
                                                                                            'datasetsforecast/long_horizon2.py')},
            'datasetsforecast.m3': { 'datasetsforecast.m3.M3': ('m3.html#m3', 'datasetsforecast/m3.py'),
                                     'datasetsforecast.m3.M3.download': ('m3.html#m3.download', 'datasetsforecast/m3.py'),
                                     'datasetsforecast.m3.M3.load': ('m3.html#m3.load', 'datasetsforecast/m3.py'),
                                     'datasetsforecast.m3.Monthly': ('m3.html#monthly', 'datasetsforecast/m3.py'),
                                     'datasetsforecast.m3.Other': ('m3.html#other', 'datasetsforecast/m3.py'),
                                     'datasetsforecast.m3.Quarterly': ('m3.html#quarterly', 'datasetsforecast/m3.py'),
                                     'datasetsforecast.m3.Yearly': ('m3.html#yearly', 'datasetsforecast/m3.py'),
                                     'datasetsforecast.m3._return_year': ('m3.html#_return_year', 'datasetsforecast/m3.py')},
            'datasetsforecast.m4': { 'datasetsforecast.m4.Daily': ('m4.html#daily', 'datasetsforecast/m4.py'),
                                     'datasetsforecast.m4.Hourly': ('m4.html#hourly', 'datasetsforecast/m4.py'),
                                     'datasetsforecast.m4.M4': ('m4.html#m4', 'datasetsforecast/m4.py'),
                                     'datasetsforecast.m4.M4._decompress': ('m4.html#m4._decompress', 'datasetsforecast/m4.py'),
                                     'datasetsforecast.m4.M4._download_urls': ('m4.html#m4._download_urls', 'datasetsforecast/m4.py'),
                                     'datasetsforecast.m4.M4._missing_files': ('m4.html#m4._missing_files', 'datasetsforecast/m4.py'),
                                     'datasetsforecast.m4.M4.async_download': ('m4.html#m4.async_download', 'datasetsforecast/m4.py'),
                                     'datasetsforecast.m4.M4.download': ('m4.html#m4.download', 'datasetsforecast/m4.py'),
                                     'datasetsforecast.m4.M4.load': ('m4.html#m4.load', 'datasetsforecast/m4.py'),
                                     'datasetsforecast.m4.M4Evaluation': ('m4.html#m4evaluation', 'datasetsforecast/m4.py'),
                                     'datasetsforecast.m4.M4Evaluation.evaluate': ( 'm4.html#m4evaluation.evaluate',
                                                                                    'datasetsforecast/m4.py'),
                                     'datasetsforecast.m4.M4Evaluation.load_benchmark': ( 'm4.html#m4evaluation.load_benchmark',
                                                                                          'datasetsforecast/m4.py'),
                                     'datasetsforecast.m4.Monthly': ('m4.html#monthly', 'datasetsforecast/m4.py'),
                                     'datasetsforecast.m4.Other': ('m4.html#other', 'datasetsforecast/m4.py'),
                                     'datasetsforecast.m4.Quarterly': ('m4.html#quarterly', 'datasetsforecast/m4.py'),
                                     'datasetsforecast.m4.Weekly': ('m4.html#weekly', 'datasetsforecast/m4.py'),
                                     'datasetsforecast.m4.Yearly': ('m4.html#yearly', 'datasetsforecast/m4.py')},
            'datasetsforecast.m5': { 'datasetsforecast.m5.M5': ('m5.html#m5', 'datasetsforecast/m5.py'),
                                     'datasetsforecast.m5.M5.download': ('m5.html#m5.download', 'datasetsforecast/m5.py'),
                                     'datasetsforecast.m5.M5.load': ('m5.html#m5.load', 'datasetsforecast/m5.py'),
                                     'datasetsforecast.m5.M5Evaluation': ('m5.html#m5evaluation', 'datasetsforecast/m5.py'),
                                     'datasetsforecast.m5.M5Evaluation.aggregate_levels': ( 'm5.html#m5evaluation.aggregate_levels',
                                                                                            'datasetsforecast/m5.py'),
                                     'datasetsforecast.m5.M5Evaluation.evaluate': ( 'm5.html#m5evaluation.evaluate',
                                                                                    'datasetsforecast/m5.py'),
                                     'datasetsforecast.m5.M5Evaluation.load_benchmark': ( 'm5.html#m5evaluation.load_benchmark',
                                                                                          'datasetsforecast/m5.py')},
            'datasetsforecast.phm2008': { 'datasetsforecast.phm2008.FD001': ('phm2008.html#fd001', 'datasetsforecast/phm2008.py'),
                                          'datasetsforecast.phm2008.FD002': ('phm2008.html#fd002', 'datasetsforecast/phm2008.py'),
                                          'datasetsforecast.phm2008.FD003': ('phm2008.html#fd003', 'datasetsforecast/phm2008.py'),
                                          'datasetsforecast.phm2008.FD004': ('phm2008.html#fd004', 'datasetsforecast/phm2008.py'),
                                          'datasetsforecast.phm2008.PHM2008': ('phm2008.html#phm2008', 'datasetsforecast/phm2008.py'),
                                          'datasetsforecast.phm2008.PHM2008.download': ( 'phm2008.html#phm2008.download',
                                                                                         'datasetsforecast/phm2008.py'),
                                          'datasetsforecast.phm2008.PHM2008.load': ( 'phm2008.html#phm2008.load',
                                                                                     'datasetsforecast/phm2008.py')},
            'datasetsforecast.utils': { 'datasetsforecast.utils.Info': ('utils.html#info', 'datasetsforecast/utils.py'),
                                        'datasetsforecast.utils.Info.__getitem__': ( 'utils.html#info.__getitem__',
                                                                                     'datasetsforecast/utils.py'),
                                        'datasetsforecast.utils.Info.__iter__': ('utils.html#info.__iter__', 'datasetsforecast/utils.py'),
                                        'datasetsforecast.utils.Info.__post_init__': ( 'utils.html#info.__post_init__',
                                                                                       'datasetsforecast/utils.py'),
                                        'datasetsforecast.utils.Info.get_group': ('utils.html#info.get_group', 'datasetsforecast/utils.py'),
                                        'datasetsforecast.utils._async_download_file': ( 'utils.html#_async_download_file',
                                                                                         'datasetsforecast/utils.py'),
                                        'datasetsforecast.utils.async_download_files': ( 'utils.html#async_download_files',
                                                                                         'datasetsforecast/utils.py'),
                                        'datasetsforecast.utils.download_file': ('utils.html#download_file', 'datasetsforecast/utils.py'),
                                        'datasetsforecast.utils.download_files': ('utils.html#download_files', 'datasetsforecast/utils.py'),
                                        'datasetsforecast.utils.extract_file': ('utils.html#extract_file', 'datasetsforecast/utils.py')}}}
